Covid-19 is spreading fast! There are N cities, numbered from 0 to (N−1), arranged in a circular manner. City 0 is connected to city 1, 1 to 2, …, city (N−2) to city (N−1), and city (N−1) to city 0.

The virus is currently at city X. Each day, it jumps from its current city, to the city K to its right, i.e., from city X to the city (X+K)%N. As the virus jumps, the cities in between don't get infected. Cities once infected stay infected. You live in city Y. Find if it will reach your city eventually. If it will, print YES, else print NO.
Sample Input:
2
6 2 5 3
12 3 4 2
Sample Output:
YES
NO


//////////////////////////////////////////////////////////////////////////CODE//////////////////////////////////////////////////////////////////////////////
/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here
		Scanner sc= new Scanner (System.in);
		int t= sc.nextInt();
		while (t-- >0){
		    int N = sc.nextInt();
		    int K = sc.nextInt();
		    int X= sc.nextInt();
		    int Y = sc.nextInt();
		    boolean ans = false;
		    int res =-1;
		    int i=1;
		    
		    while(res != X){
		        
		        res = (X+ (K*i))%N;
		        i++;
		        if(res == Y )
		        {
		           ans = true;
		        }
		    }
		    
		    if(ans){
		        System.out.println("YES");
		    }
            else{
                System.out.println("NO");
            }		    
		   
		}
	}
}
